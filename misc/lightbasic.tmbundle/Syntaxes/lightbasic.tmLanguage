<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>bas</string>
	</array>
	<key>name</key>
	<string>lightbasic</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>begin</key>
			<string>'</string>
			<key>end</key>
			<string>\n</string>
			<key>name</key>
			<string>comment.line.lbc</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>\b(?i:(rem))\b</string>
			<key>end</key>
			<string>\n</string>
			<key>name</key>
			<string>comment.line.lbc</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>/'</string>
			<key>end</key>
			<string>'/</string>
			<key>name</key>
			<string>comment.block.lbc</string>
		</dict>
		<dict>
			<key>match</key>
			<string>([@\[\]=,()_&amp;\*&lt;&gt;\.])</string>
			<key>name</key>
			<string>keyword.operator.lbc</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(?i:(mod|or|and|not|as|is))\b</string>
			<key>name</key>
			<string>keyword.operator.words.lbc</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(?i:(end\s+(if)|return|if|then|else|for|to|step|next|continue|exit|do|loop))\b</string>
			<key>name</key>
			<string>keyword.control.lbc</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(?i:(interface|property|destructor|extern|import|type|function|sub|declare|const|dim))\b</string>
			<key>name</key>
			<string>keyword.other.lbc</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(?i:(end\s+(if|function|sub|constructor|extern|destructor|property|type|interface)))\b</string>
			<key>name</key>
			<string>keyword.other.ends.lbc</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(?i:((copy|move)?\s*constructor))\b</string>
			<key>name</key>
			<string>keyword.other.constructor.lbc</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(?i:(zstring|ubyte|byte|ushort|short|uinteger|integer|ulong|long|ulongint|longint|single|double|bool|any|typeof|sizeof|alignof))\b</string>
			<key>name</key>
			<string>storage.type.lbc</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(?i:(const|ptr|ref|of))\b</string>
			<key>name</key>
			<string>storage.modifier.lbc</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(?i:(public|private)\s*(\(set\))?)</string>
			<key>name</key>
			<string>storage.modifier.access.lbc</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(?i:(true|false|null))\b</string>
			<key>name</key>
			<string>constant.language.lbc</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(-?[0-9]*\.?[0-9]+)\b</string>
			<key>name</key>
			<string>constant.numeric.lbc</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>"</string>
			<key>end</key>
			<string>"</string>
			<key>name</key>
			<string>string.quoted.double.lbc</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\.</string>
					<key>name</key>
					<string>constant.character.escape.lbc</string>
				</dict>
			</array>
		</dict>
	</array>
	<key>scopeName</key>
	<string>source.lbc</string>
	<key>uuid</key>
	<string>2EE05B0E-22BA-4CE7-8481-CDD68C6AAE56</string>
</dict>
</plist>
